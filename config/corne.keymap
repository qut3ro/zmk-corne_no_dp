/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <behaviors/ruen.dtsi>


/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap_letters";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        sm: sticky_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_MOD";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <5000>;
            quick-release;
            ignore-modifiers;
        };

        backspace_morph: backspace_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_MORPH";
            bindings = <&lt 2 BACKSPACE>, <&lt 2 LA(BACKSPACE)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 16 14>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <19 20 21>;
        };

        comboL4 {
            bindings = <&mo 4>;
            key-positions = <38 39>;
        };
    };

    macros {
        ruen_to_en: ruen_to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(N8)>;
        }; 

        ruen_to_ru: ruen_to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(N9)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        letters {
            display-name = "Let";
            bindings = <
&kp ESC           &kp Q   &kp W                &ruen_key F E        &ruen_key P R       &ruen_key G T               &ruen_key J Y         &ruen_key L U       &ruen_key U I    &ruen_key Y O       &ruen_key SEMICOLON P      &ht DELETE LEFT_BRACKET
&kp TAB           &kp A   &ruen_key R S        &ruen_key S D        &ruen_key T F       &ruen_key D G               &kp H                 &ruen_key N J       &ruen_key E K    &ruen_key I L       &ruen_key O SEMICOLON      &kp SQT
&kp LEFT_CONTROL  &kp Z   &kp X                &kp C                &kp V               &kp B                       &ruen_key K N         &kp M               &kp COMMA        &kp DOT             &kp SLASH                  &kp ENTER
                  &kp LGUI                     &lt 1 ENTER                              &kp LEFT_SHIFT                                    &lt 3 SPACE                          &backspace_morph    &kp RALT
            >;
        };

        numbers {
            display-name = "Num";
            bindings = <
&kp LC(LA(ENTER))            &kp LC(LA(U))             &kp LC(LA(I))     &kp LA(LC(LEFT_ARROW))   &kp LC(LA(RIGHT_ARROW))    &kp LG(NUMBER_6)           &kp LA(SPACE)   &kp LS(N9)      &kp EQUAL               &kp LS(N0)                 &kp LS(MINUS)        &kp PAGE_UP
&kp LC(LA(LG(LEFT_ARROW)))   &kp NUMBER_1              &kp NUMBER_2      &kp NUMBER_3             &kp NUMBER_4               &kp NUMBER_5               &kp NUMBER_6    &kp N7          &kp NUMBER_8            &kp NUMBER_9               &kp NUMBER_0         &kp PAGE_DOWN
&kp LG(LC(LA(RIGHT_ARROW)))  &ruen_one_key 1 LS(N4)    &kp SLASH         &ruen_key LS(N5) LS(N4)  &ruen_one_key 1 LS(N8)     &ruen_switch 0             &kp MINUS      &kp LS(EQUAL)    &ruen_key COMMA LS(N6)  &ruen_key PERIOD LS(N7)    &kp SLASH            &kp END
                             &trans                   &trans             &trans                                                                                                    &trans          &trans                &trans
            >;
        };

        symbols {
            bindings = <
&trans    &none                   &ruen_one_key 1 LS(RIGHT_BRACKET)  &ruen_one_key 1 LS(N3)          &ruen_one_key 1 LS(LEFT_BRACKET)  &ruen_one_key 1 BACKSLASH    &ruen_one_key 1 GRAVE   &ruen_one_key 1 LS(COMMA)  &ruen_one_key 1 LS(BACKSLASH)  &ruen_one_key 1 LS(PERIOD)  &kp LS(MINUS)   &trans
&trans    &ruen_one_key 1 LS(N7)  &kp LS(N1)                         &ruen_key LS(SEMICOLON) LS(N5)  &ruen_key LS(SQT) LS(N2)          &ruen_one_key 1 SQT          &ruen_one_key 1 LS(N2)  &sm LEFT_GUI               &sm LEFT_ALT                   &sm LEFT_SHIFT              &sm LCTRL       &trans
&trans    &none                   &ruen_key RIGHT_BRACKET GRAVE      &ruen_key SEMICOLON LS(N8)      &ruen_key LEFT_BRACKET LS(GRAVE)  &ruen_one_key 1 GRAVE        &ruen_switch 1          &ruen_key COMMA LS(N6)     &ruen_key PERIOD LS(N7)        &ruen_one_key 1 LS(N6)      &kp LS(SLASH)   &trans
                            &trans                   &trans                                     &kp DEL                           &kp LEFT_SHIFT               &kp SPACE               &trans
            >;
        };

        functions {
            display-name = "Fun";
            bindings = <
&ht F1 C_BRI_DN  &ht F2 C_BRI_UP  &kp F3         &kp F4         &kp F5           &kp F6              &ht F7 C_PREV       &ht F8 C_PLAY_PAUSE  &ht F9 C_NEXT   &ht F10 C_MUTE        &ht F11 C_VOL_DN       &ht F12 C_VOL_UP
&ruen_macos 1    &kp LG(Z)        &kp LG(X)      &kp LG(C)      &kp LG(V)        &ruen_macos 0       &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &kp UP_ARROW    &kp LG(LS(NUMBER_3))  &kp LG(LS(NUMBER_4))   &kp LG(LS(N5))
&bootloader      &bt BT_CLR_ALL   &bt BT_SEL 0   &bt BT_DISC 0  &rgb_ug RGB_ON   &rgb_ug RGB_OFF     &none               &kp LEFT_ARROW       &kp DOWN_ARROW  &kp RIGHT_ARROW       &kp LG(RIGHT_BRACKET)  &bootloader
                        &trans          &trans          &trans                                                                      &trans              &trans               &trans
            >;
        };
    };
};
